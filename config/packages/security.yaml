security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 10

    providers:
        user_custom_provider:
            entity:
                class: App\Entity\User
                property: email

        api_token:
            entity:
                class: App\Entity\User
                property: api_token

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_MANAGER]
        ROLE_MANAGER: ROLE_USER

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            anonymous: false
            stateless: true
            provider: api_token
            guard:
                authenticators:
                    - api_key_authenticator
        main:
            anonymous: true

            form_login:
                provider: user_custom_provider
                login_path: login
                check_path: login_check
                username_parameter: email
                password_parameter: password
                default_target_path: product_list

            logout:
                path: logout
                invalidate_session: false

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: /, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: /login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: /logout, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/api, roles: ROLE_MANAGER }
         - { path: ^/product, roles: ROLE_MANAGER }
         - { path: ^/user, roles: ROLE_SUPER_ADMIN }

